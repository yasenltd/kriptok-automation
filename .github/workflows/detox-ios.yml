name: Detox iOS

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "ios/**"
      - "e2e/**"
      - "detox.config.*"
      - "package.json"
      - "yarn.lock"
      - "pnpm-lock.yaml"

jobs:
  e2e:
    runs-on: macos-14
    timeout-minutes: 60

    env:
      CI: true
      TERM: xterm
      NODE_OPTIONS: --max_old_space_size=4096
      EXPO_NO_TELEMETRY: 1

      # --- FE config (from your repository Secrets) ---
      EXPO_PUBLIC_BALANCES_FETCH_INTERVAL: ${{ secrets.EXPO_PUBLIC_BALANCES_FETCH_INTERVAL }}
      EXPO_PUBLIC_DEV_HOST: ${{ secrets.EXPO_PUBLIC_DEV_HOST }}   # e.g. 127.0.0.1:3000
      EXPO_PUBLIC_HOST: ${{ secrets.EXPO_PUBLIC_HOST }}           # e.g. http
      EXPO_PUBLIC_INFURA_ID: ${{ secrets.EXPO_PUBLIC_INFURA_ID }}
      EXPO_PUBLIC_MODE: ${{ secrets.EXPO_PUBLIC_MODE }}

      # --- Test data (Secrets) ---
      TEST_PIN: ${{ secrets.TEST_PIN }}
      TEST_SEED_PHRASE: ${{ secrets.TEST_SEED_PHRASE }}
      TEST_WALLET_NAME: ${{ secrets.TEST_WALLET_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.13.1
          run_install: false

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.4
          cache: pnpm

      - name: Select Xcode (prefer 16.4, else best available)
        shell: bash
        run: |
          set -euo pipefail
          candidates=(
            /Applications/Xcode_16.4.app
            /Applications/Xcode_16.4.0.app
            /Applications/Xcode_16.3.app
            /Applications/Xcode_16.3.0.app
            /Applications/Xcode_16.2.app
            /Applications/Xcode_16.2.0.app
            /Applications/Xcode_16.1.app
            /Applications/Xcode_16.1.0.app
            /Applications/Xcode_16.0.app
            /Applications/Xcode_16.0.0.app
            /Applications/Xcode_16.app
            /Applications/Xcode.app
          )
          selected=""
          for x in "${candidates[@]}"; do
            if [ -d "$x" ]; then selected="$x"; break; fi
          done
          if [ -z "$selected" ]; then
            echo "::error::No Xcode installations found under /Applications"
            ls -1 /Applications | sed -n '/Xcode/p' || true
            exit 1
          fi
          echo "Using Xcode at: $selected"
          echo "DEVELOPER_DIR=$selected/Contents/Developer" >> "$GITHUB_ENV"
          DEVELOPER_DIR="$selected/Contents/Developer" xcrun simctl list runtimes || true
          DEVELOPER_DIR="$selected/Contents/Developer" xcrun simctl list devicetypes || true

      - name: Build Detox iOS framework cache
        run: |
          pnpm exec detox clean-framework-cache || true
          pnpm exec detox build-framework-cache

      - name: Install Apple tools needed by Detox
        run: |
          brew update
          brew tap wix/brew
          brew install applesimutils watchman

      - name: Install JS deps
        run: pnpm install --frozen-lockfile

      # Generate/refresh ios/ if it isn't committed. Keep --no-install for speed & caching.
      - name: Expo prebuild (no install)
        run: npx expo prebuild --platform ios --no-install

      # Cache Pods BEFORE install
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods
        working-directory: ios
        run: |
          sudo gem install cocoapods -N
          pod install

      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-derived-${{ hashFiles('ios/Podfile.lock', 'ios/**.xcodeproj/**', 'ios/**.xcworkspace/**') }}
          restore-keys: |
            ${{ runner.os }}-derived-

      - name: List simulators (debug aid)
        run: xcrun simctl list devices

      - name: Build app (Detox)
        run: pnpm exec detox build -c ios.sim.debug

      # Optional mock API the simulator can reach at 127.0.0.1:3000
      - name: Start mock API (optional)
        run: |
          npx http-server -p 3000 --silent &
          echo $! > mock_api.pid

      - name: Run Detox tests (headless)
        run: pnpm run e2e:createFlow:tests:ci

      - name: Upload Detox artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detox-artifacts
          path: |
            e2e/artifacts
            ~/Library/Detox/Artifacts
          if-no-files-found: ignore

      - name: Stop background services
        if: always()
        run: |
          kill $(cat metro.pid) 2>/dev/null || true
          kill $(cat mock_api.pid) 2>/dev/null || true
